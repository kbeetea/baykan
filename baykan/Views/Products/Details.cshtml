@model baykan.Models.Product

@{
    ViewBag.Title = "Product Details";
}

<style>
    /* Product Container */
    .product-container {
        margin-top: 80px;
        margin-left: auto;
        margin-right: auto;
        max-width: 1000px;
        padding: 30px;
        background: #fdfdfd;
        border-radius: 15px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    }

    /* Product Image */
    .product-image img {
        width: 100%;
        height: auto;
        max-height: 450px;
        object-fit: cover;
        border-radius: 10px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    /* Product Details */
    .product-details h2 {
        font-family: 'Playfair Display', serif;
        font-weight: bold;
        color: #3a2d1f;
    }

    .product-price {
        font-size: 1.8rem;
        font-weight: bold;
        color: #b8885e;
    }

    .product-description {
        font-size: 1rem;
        color: #5a4a3b;
        line-height: 1.6;
    }

    /* Buttons */
    .btn-add-to-cart {
        background-color: #b8885e;
        color: white;
        font-weight: bold;
        border: none;
        padding: 12px 20px;
        font-size: 1rem;
        text-transform: uppercase;
        border-radius: 5px;
        transition: all 0.3s ease-in-out;
    }

        .btn-add-to-cart:hover {
            background-color: #8a6642;
            color: white;
            transform: scale(1.05);
        }

    .btn-back {
        background-color: #a6a6a6;
        color: white;
        padding: 10px 18px;
        font-size: 0.9rem;
        border-radius: 5px;
        transition: all 0.3s ease-in-out;
    }

        .btn-back:hover {
            background-color: #7d7d7d;
        }
</style>

<!-- Product Details Container -->
<div class="container product-container">
    <div class="row g-4">
        <!-- Product Image -->
        <div class="col-md-5 text-center product-image">
            @if (Model.ProductImage != null && Model.ProductImage.Length > 0)
            {
                string base64String = Convert.ToBase64String(Model.ProductImage);
                <img src="data:image/png;base64,@base64String" class="img-fluid rounded" />
            }
            else
            {
                <p>No Image Available</p>
            }
        </div>

        <!-- Product Info -->
        <div class="col-md-7 product-details">
            <h2>@Model.ProductName</h2>
            <h4 class="product-price">$@Model.ProductPrice</h4>
            <p class="product-description">@Model.ProductDescription</p>
            <p><strong>Category:</strong> @(Model.Category != null ? Model.Category.CategoryName : "No Category")</p>
            <p><strong>Brand:</strong> @(Model.Brand != null ? Model.Brand.BrandName : "No Brand")</p>

            <!-- Add to Cart -->
            <div class="mt-4">
                @if (Session["UserId"] == null)
                {
                    <a href="@Url.Action("Login", "Account")" class="btn btn-add-to-cart add-to-cart">Add to Cart</a>
                }
                else
                {
                    <button class="btn btn-add-to-cart add-to-cart" data-productid="@Model.ProductId">Add to Cart</button>
                }
            </div>


            <!-- Back to Products -->
            <a href="@Url.Action("Index", "Products")" class="btn btn-back mt-3">Back to Products</a>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $(".add-to-cart").click(function (e) {
            e.preventDefault(); // Prevent default action (useful if wrapped in a form)

            var productId = $(this).data("productid");

            // If productId is undefined, the button is an <a> tag, meaning user is not logged in.
            if (typeof productId === "undefined") {
                window.location.href = "/Login"; // Redirect guest to login page
                return;
            }

            // AJAX request for logged-in users
            $.ajax({
                url: "/Cart/AddToCart",
                type: "POST",
                data: { productId: productId },
                success: function (response) {
                    alert("Item added to cart!");
                    if (response.cartCount !== undefined) {
                        $("#cart-count").text(response.cartCount); // Update navbar cart count
                    }
                },
                error: function () {
                    alert("Failed to add item to cart.");
                }
            });
        });
    });
</script>l̥
